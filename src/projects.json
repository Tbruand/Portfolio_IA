[
    {
    "id": 1,
    "title": "Types d'algorithmes d'apprentissage",
    "tags": ["IA", "Cours"],
    "image": "./assets/img/p1/p1_banner.jpg",
    "disclaimer": "üö® Contenu en fran√ßais et anglais, meilleur pour l'apprentissage des termes IA. üö®",
    "introduction": "L'intelligence artificielle (IA) repose sur divers types d'algorithmes d'apprentissage, chacun adapt√© √† des t√¢ches sp√©cifiques. Les principales cat√©gories sont le **supervised learning**, le **unsupervised learning** et le **reinforcement learning**.",
    "categories": [
      {
        "type": "category",
        "title": "Supervised learning",
        "description":"Dans le **supervised learning**, le **model** est entra√Æn√© sur des **labeled data**, c'est-√†-dire que chaque **input** est associ√© √† une **target** connue. L'objectif est d'apprendre une **function** qui mappe les **inputs** aux **targets** correspondantes, permettant ainsi de faire des **predictions** sur de nouvelles **data**. Les principales t√¢ches du **supervised learning** sont la **classification** et la **regression**.",
        "subcategories": [
          {
            "type": "subcategory",
            "title": "Classification",
            "sections": [
              {
                "type": "text",
                "content": "Attribuer une **category** ou une **class** √† une **input**."
              },
              {
                "type": "subtext",
                "content": "**Exemple** : Pr√©dire si un e-mail est un spam ou non en fonction de ses **features** (pr√©sence de certains mots, longueur du message, etc.)."
              },
              {
                "type": "littletitle",
                "content": "Data :"
              },
              {
                "type": "table",
                "content": {
                  "headers": ["E-mail", "Spam (1) / Non-spam (0)"],
                  "rows": [
                    ["Gagnez de l'argent rapidement", "1"],
                    ["R√©union demain √† 10h", "0"],
                    ["Offre sp√©ciale pour vous", "1"],
                    ["Compte-rendu de la r√©union", "0"]
                  ]
                }
              },
              {
                "type": "liengithub",
                "content": "https://github.com/Tbruand/Projet_python_portfolio/tree/main/cours_pratique/supervised_learning/classification"
              },
              {
                "type": "subtext",
                "content": "**Algorithmes courants** : Logistic regression, Decision trees, Support Vector Machines (SVMs)."
              }
            ]
          },
          {
            "type": "subcategory",
            "title": "Regression",
            "sections": [
              {
                "type": "text",
                "content": "Pr√©dire une **numerical value** continue √† partir des **inputs**."
              },
              {
                "type": "subtext",
                "content": "**Exemple** : Estimer le prix d'une maison en fonction de sa **area**, du nombre de **rooms**, de l'**location**, etc."
              },
              {
                "type": "littletitle",
                "content": "Data :"
              },
              {
                "type": "table",
                "content": {
                  "headers": ["Area (m¬≤)", "Rooms", "Location", "Price (‚Ç¨)"],
                  "rows": [
                    ["80", "2", "City center", "200,000"],
                    ["120", "3", "Suburb", "250,000"],
                    ["60", "1", "City center", "150,000"],
                    ["100", "3", "Periphery", "220,000"]
                  ]
                }
              },
              {
                "type": "liengithub",
                "content": "https://github.com/Tbruand/Projet_python_portfolio/tree/main/cours_pratique/supervised_learning/regression"
              },
              {
                "type": "subtext",
                "content": "**Algorithmes courants** : Linear regression, Random forest regression, Neural networks."
              }
            ]
          }
        ]
      },
      {
        "type": "category",
        "title": "Unsupervised learning",
        "description":"Le **unsupervised learning** implique des **unlabeled data**, c'est-√†-dire sans **targets** connues. Le **model** doit identifier des **patterns** ou des **hidden structures** dans les **data**. Les principales t√¢ches sont le **clustering** et la **dimensionality reduction**.",
        "subcategories": [
          {
            "type": "subcategory",
            "title": "Clustering",
            "sections": [
              {
                "type": "text",
                "content": "Regrouper des **data** similaires en **clusters** ou **groups**."
              },
              {
                "type": "subtext",
                "content": "**Exemple** : Segmenter des clients en fonction de leurs comportements d'achat pour des campagnes marketing cibl√©es."
              },
              {
                "type": "littletitle",
                "content": "Data :"
              },
              {
                "type": "table",
                "content": {
                  "headers": ["Client", "Age", "Purchase frequency", "Average spend (‚Ç¨)"],
                  "rows": [
                    ["A", "25", "5", "20"],
                    ["B", "40", "2", "50"],
                    ["C", "30", "10", "15"],
                    ["D", "35", "4", "30"]
                  ]
                }
              },
              {
                "type": "liengithub",
                "content": "https://github.com/Tbruand/Projet_python_portfolio/tree/main/cours_pratique/unsupervised_learning/clustering"
              }, 
              {
                "type": "subtext",
                "content": "**Algorithmes courants** : K-means, Hierarchical clustering, DBSCAN."
              }
            ]
          },
          {
            "type": "subcategory",
            "title": "Dimensionality reduction",
            "sections": [
              {
                "type": "text",
                "content": "Simplifier les **data** en r√©duisant le nombre de **features** tout en conservant l'essentiel de l'information."
              },
              {
                "type": "subtext",
                "content": "**Exemple** : R√©duire les **features** d'images pour faciliter leur **classification**."
              },
              {
                "type": "img",
                "content": "./assets/img/p1/PCA_2D.png"
              },
              {
                "type": "liengithub",
                "content": "https://github.com/Tbruand/Projet_python_portfolio/tree/main/cours_pratique/unsupervised_learning/dimensionality_reduction"
              },   
              {
                "type": "subtext",
                "content": "**Algorithmes courants** : Principal Component Analysis (PCA), t-SNE, Autoencoders."
              }
            ]
          }
        ]
      },
      {
        "type": "category",
        "title": "Reinforcement learning",
        "description":"Le **reinforcement learning** implique un **agent** qui apprend √† prendre des d√©cisions en interagissant avec un **environment**, en recevant des **rewards** ou des **penalties** en fonction de ses **actions**. L'objectif est de maximiser la **cumulative reward** sur le long terme.",
        "sections": [
              {
                "type": "subtext",
                "content": "**Exemple** : Un robot qui apprend √† naviguer dans un labyrinthe pour atteindre une sortie en √©vitant les obstacles."
              },
              {
                "type": "littletitle",
                "content": "Data :"
              },
              {
                "type": "firstline",
                "content": "**States** : Positions possibles du robot dans le labyrinthe."
              },
              {
                "type": "firstline",
                "content": "**Actions** : D√©placements possibles (haut, bas, gauche, droite)."
              },
              {
                "type": "firstline",
                "content": "**Rewards** :"
              },
              {
                "type": "secondline",
                "content": "  +10 pour atteindre la sortie."
              },
              {
                "type": "secondline",
                "content": "  -1 pour chaque mouvement."
              },
              {
                "type": "secondline",
                "content": "  -10 pour heurter un obstacle."
              },
              {
                "type": "img",
                "content": "./assets/img/p1/agent.gif"
              }, 
              {
                "type": "subtext",
                "content": "**Algorithmes courants** : Q-learning, Deep Q-Networks (DQN), Policy gradients."
              },
              {
                "type": "text",
                "content": "Chaque type d'apprentissage est adapt√© √† des situations sp√©cifiques et le choix de l'algorithme d√©pend de la nature des **data** et des objectifs poursuivis."
              }
            ]
      }
    ]
  },
  {
    "id": 2,
    "title": "L'IA : pourquoi il ne faut pas en avoir peur ?",
    "tags": ["IA", "Article"],
    "image": "./assets/img/placeholder.webp",
    "introduction": "Depuis plusieurs ann√©es, l'**intelligence artificielle (IA)** occupe une place de plus en plus importante dans nos vies quotidiennes. Des assistants virtuels comme Siri et Alexa aux voitures autonomes en passant par les recommandations de contenus sur les plateformes de streaming, l'IA semble √™tre partout. Pourtant, malgr√© ses nombreux avantages, elle suscite aussi des peurs et des interrogations. Ces craintes, souvent exag√©r√©es par les repr√©sentations cin√©matographiques et litt√©raires, peuvent √™tre apais√©es en comprenant mieux la nature, les limites et les potentialit√©s de l'intelligence artificielle.",
    "categories": [
      {
        "type": "category",
        "title": "Une technologie con√ßue pour aider",
        "description":"",
        "sections": [
              {
                "type": "text",
                "content": "L'objectif premier de l'IA est de **faciliter nos vies**. Elle est con√ßue pour accomplir des t√¢ches sp√©cifiques, souvent r√©p√©titives ou complexes, avec une efficacit√© accrue. Par exemple, dans le domaine m√©dical, l'IA permet de d√©tecter pr√©cocement certaines maladies, comme le cancer, gr√¢ce √† l'**analyse d'images m√©dicales**. Elle assiste les m√©decins, mais ne les remplace pas, car la d√©cision finale revient toujours √† l'humain."
              },
              {
                "type": "text",
                "content": "Dans l'industrie, l'IA **optimise les processus de production**, r√©duit les erreurs et augmente la productivit√©. Dans les transports, elle contribue √† la s√©curit√© routi√®re gr√¢ce √† des syst√®mes d'assistance √† la conduite. Toutes ces avanc√©es montrent que l'IA est con√ßue comme un outil au service de l'homme."
              }
            ]
      },
      {
        "type": "category",
        "title": "Des peurs souvent infond√©es",
        "description":"",
        "sections": [
              {
                "type": "text",
                "content": "Parmi les craintes r√©currentes, on retrouve celle d'une IA incontr√¥lable qui dominerait l'humanit√©. Cette id√©e, popularis√©e par des films comme *Terminator*, repose davantage sur la fiction que sur la r√©alit√©. En effet, il est essentiel de distinguer l'IA \"faible\" et l'IA \"forte\". L'IA \"faible\", qui constitue la majorit√© des syst√®mes actuels, est con√ßue pour ex√©cuter des t√¢ches sp√©cifiques, comme recommander un film ou analyser une image. Quant √† l'IA \"forte\", qui pourrait th√©oriquement atteindre un niveau d'intelligence comparable √† celui de l'humain, elle demeure un concept th√©orique, loin d'√™tre r√©alis√©. Ainsi, les syst√®mes actuels d'intelligence artificielle sont loin d'√™tre autonomes : ils sont programm√©s pour des objectifs pr√©cis et op√®rent sous le contr√¥le humain."
              },
              {
                "type": "text",
                "content": "Une autre peur concerne la perte d'emplois. Bien que certaines professions √©voluent ou disparaissent, l'IA cr√©e aussi de nouvelles opportunit√©s. Des postes dans la data science, la robotique ou l'√©thique num√©rique voient le jour, r√©clamant des comp√©tences adapt√©es au monde en mutation."
              }
            ]
      },
      {
        "type": "category",
        "title": "Une √©thique n√©cessaire",
        "description":"",
        "sections": [
              {
                "type": "text",
                "content": "Pour garantir que l'IA reste b√©n√©fique, il est essentiel de d√©velopper un cadre √©thique. Cela inclut la **transparence des algorithmes**, le **respect de la vie priv√©e** et l'**√©quit√© des d√©cisions** prises par les syst√®mes automatis√©s. Des initiatives internationales, comme celles de l'UNESCO, visent √† encadrer l'utilisation de l'intelligence artificielle afin d'√©viter les abus."
              }
            ]
      },
      {
        "type": "category",
        "title": "L'importance de la p√©dagogie",
        "description":"",
        "sections": [
              {
                "type": "text",
                "content": "La peur de l'IA est souvent li√©e √† une mauvaise compr√©hension de ce qu'elle est et de son fonctionnement. Il est donc primordial de d√©mocratiser les connaissances sur ce sujet. En expliquant les concepts de base, comme le **machine learning** ou le **deep learning**, on peut dissiper de nombreux malentendus. De m√™me, sensibiliser le grand public √† la mani√®re dont les donn√©es sont collect√©es et utilis√©es permet d'√©viter les fantasmes et les amalgames."
              }
            ]
      },
      {
        "type": "category",
        "title": "Conclusion",
        "description":"",
        "sections": [
              {
                "type": "text",
                "content": "L'intelligence artificielle, loin d'√™tre une menace, repr√©sente une opportunit√© extraordinaire pour am√©liorer nos vies. Bien qu'elle pose des d√©fis, notamment √©thiques, ces derniers peuvent √™tre relev√©s gr√¢ce √† une r√©gulation adapt√©e et une √©ducation appropri√©e. Plut√¥t que de craindre l'IA, il est temps de l'accueillir avec pragmatisme et enthousiasme, en la consid√©rant pour ce qu'elle est : **un outil puissant, con√ßu par l'humain, pour l'humain**."
              }
            ]
      }
    ]
  },{
    "id": 3,
    "title": "Construire un Model de Classification des Fleurs Iris en Python",
    "tags": ["IA", "Article"],
    "image": "./assets/img/placeholder.webp",
    "introduction": "Dans cet article, nous allons cr√©er un model de classification pour le c√©l√®bre dataset **Iris**. Ce projet est une excellente introduction √† **supervised learning** et √† la **classification**. \n Le but est simple : pr√©dire l'esp√®ce d'une fleur (¬´ **Iris-setosa** ¬ª, ¬´ **Iris-versicolor** ¬ª ou ¬´ **Iris-virginica** ¬ª) en fonction des mesures de ses **petals** et de ses **sepals**.",
    "categories": [
      {
        "type": "category",
        "title": "Pr√©paration de l'environnement",
        "description":"Tout d'abord, nous devons importer les **libraries** n√©cessaires pour le projet. Voici le code pour cette √©tape :",
        "sections": [
          {
            "type": "code",
            "language": "python",
            "content": "import pandas as pd\nimport numpy as np\nfrom sklearn.datasets import load_iris\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import classification_report, confusion_matrix\nimport seaborn as sns\nimport matplotlib.pyplot as plt"
          }
        ]
      },
      {
        "type": "category",
        "title": "Exploration des donn√©es",
        "description":"Le dataset **Iris** est disponible directement dans **Scikit-learn**. Nous le chargeons et le convertissons en un **DataFrame** pour faciliter l'analyse.",
        "sections": [
          {
            "type": "code",
            "language": "python",
            "content": "iris = load_iris()\nX = iris.data\ny = iris.target\nfeature_names = iris.feature_names\ntarget_names = iris.target_names\n\niris_df = pd.DataFrame(X, columns=feature_names)\niris_df['target'] = y\n\niris_df.head()"
          },
          {
            "type": "text",
            "content": "Nous pouvons ensuite explorer les relations entre les variables avec des **graphs** :"
          },
          {
            "type": "code",
            "language": "python",
            "content": "sns.pairplot(iris_df, hue='target', diag_kind='kde', markers=[\"o\", \"s\", \"D\"])\nplt.show()"
          }
            ]
      },
      {
        "type": "category",
        "title": "Pr√©traitement des donn√©es",
        "description":"Avant d'entra√Æner un **model**, nous divisons nos donn√©es en **training set** et **test set**. Nous normalisons √©galement les caract√©ristiques pour √©viter les probl√®mes li√©s √† l'√©chelle des valeurs :",
        "sections": [
          {
            "type": "code",
            "language": "python",
            "content": "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42, stratify=y)\n\nscaler = StandardScaler()\nX_train = scaler.fit_transform(X_train)\nX_test = scaler.transform(X_test)"
          }
            ]
      },
      {
        "type": "category",
        "title": "Entra√Ænement du Model",
        "description":"Pour ce projet, nous utilisons un **Random Forest classifier** :",
        "sections": [
          {
            "type": "code",
            "language": "python",
            "content": "model = RandomForestClassifier(random_state=42)\nmodel.fit(X_train, y_train)"
          }
            ]
      },
      {
        "type": "category",
        "title": "√âvaluation des performances",
        "description":"Nous √©valuons les performances du model avec un **classification report** et une **confusion matrix** :",
        "sections": [
          {
            "type": "code",
            "language": "python",
            "content": "y_pred = model.predict(X_test)\n\nprint(\"Rapport de classification :\")\nprint(classification_report(y_test, y_pred, target_names=target_names))\n\nconf_matrix = confusion_matrix(y_test, y_pred)\nsns.heatmap(conf_matrix, annot=True, fmt=\"d\", cmap=\"Blues\", xticklabels=target_names, yticklabels=target_names)\nplt.xlabel(\"Predictions\")\nplt.ylabel(\"Ground Truth\")\nplt.show()"
          }
            ]
      },
      {
        "type": "category",
        "title": "Conclusion",
        "description":"Nous avons construit un **simple but effective model** pour pr√©dire les esp√®ces de fleurs dans le dataset **Iris**. Ce projet illustre les √©tapes essentielles d'un projet de **machine learning** : ",
        "sections": [
          {
            "type": "firstline",
            "content": "**Loading and exploring data**"
          },
          {
            "type": "firstline",
            "content": "**Data preprocessing**"
          },
          {
            "type": "firstline",
            "content": "**Training a model**"
          },
          {
            "type": "firstline",
            "content": "**Evaluating performance**"
          }
            ]
      }
    ]
  }
]    